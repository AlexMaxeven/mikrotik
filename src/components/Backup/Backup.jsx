import { useState, useRef, useEffect } from 'react'
import styles from './Backup.module.css'

// –Ü–º–ø–æ—Ä—Ç –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
import dhcp1Img from '../../assets/Reserve_connect/dhcp1.jpg'
import dhcp2Img from '../../assets/Reserve_connect/dhcp2.jpg'
import dhcp3Img from '../../assets/Reserve_connect/dhcp3.jpg'
import addressImg from '../../assets/Reserve_connect/address.jpg'
import natImg from '../../assets/Reserve_connect/nat.jpg'
import route1Img from '../../assets/Reserve_connect/route1.jpg'
import route2Img from '../../assets/Reserve_connect/route2.jpg'
import route3Img from '../../assets/Reserve_connect/route3.jpg'

function Backup({ onImageClick }) {
  const [openAccordions, setOpenAccordions] = useState([])
  const [isSticky, setIsSticky] = useState(false)
  const guideRef = useRef(null)
  const buttonRef = useRef(null)

  const toggleAccordion = (index) => {
    // –Ø–∫—â–æ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –≤–∂–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π - –∑–∞–∫—Ä–∏–≤–∞—î–º–æ
    // –Ø–∫—â–æ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –∑–∞–∫—Ä–∏—Ç–∏–π - –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ (–Ω–µ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ —ñ–Ω—à—ñ)
    setOpenAccordions(prev => {
      if (prev.includes(index)) {
        // –í–∏–¥–∞–ª—è—î–º–æ –∑ –º–∞—Å–∏–≤—É (–∑–∞–∫—Ä–∏–≤–∞—î–º–æ)
        return prev.filter(item => item !== index)
      } else {
        // –î–æ–¥–∞—î–º–æ –¥–æ –º–∞—Å–∏–≤—É (–≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ)
        return [...prev, index]
      }
    })
  }

  const scrollToGuide = () => {
    guideRef.current?.scrollIntoView({ 
      behavior: 'smooth',
      block: 'start'
    })
  }


  useEffect(() => {
    const handleScroll = () => {
      if (guideRef.current && buttonRef.current) {
        const guideTop = guideRef.current.offsetTop
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop
        const buttonBottom = buttonRef.current.offsetTop + buttonRef.current.offsetHeight
        
        // –Ø–∫—â–æ –∫–Ω–æ–ø–∫–∞ –¥–æ—Å—è–≥–∞—î –ø–æ—á–∞—Ç–∫—É –≥—ñ–¥—É - –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ó—ó
        if (buttonBottom >= guideTop) {
          setIsSticky(false)
          // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
          if (buttonRef.current) {
            buttonRef.current.style.opacity = '0'
            buttonRef.current.style.transform = 'translateY(-20px)'
            buttonRef.current.style.pointerEvents = 'none'
          }
        } else {
          setIsSticky(true)
          // –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –∑–Ω–æ–≤—É
          if (buttonRef.current) {
            buttonRef.current.style.opacity = '1'
            buttonRef.current.style.transform = 'translateY(0)'
            buttonRef.current.style.pointerEvents = 'auto'
          }
        }
      }
    }

    window.addEventListener('scroll', handleScroll)
    handleScroll() // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–¥—Ä–∞–∑—É –¥–ª—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É

    return () => window.removeEventListener('scroll', handleScroll)
  }, [])


  return (
    <div className={styles.page}>
      <h1 className={styles.title}>üîå –†–µ–∑–µ—Ä–≤–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–µ–∫—ñ–ª—å–∫–æ—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤</h1>
      <p className={styles.description}>
        –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MikroTik –∑ –∫—ñ–ª—å–∫–æ–º–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏:
      </p>
      
      {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–æ –≥—ñ–¥—É */}
      <div 
        ref={buttonRef}
        className={`${styles.scrollButtonContainer} ${isSticky ? styles.sticky : ''}`}
      >
        <button className={styles.scrollButton} onClick={scrollToGuide}>
          üìå –†–µ–∑–µ—Ä–≤–Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è 2+ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤
        </button>
      </div>
      
      <div className={styles.settingsGrid}>
        <div className={styles.settingsCategory}>
          <h3 className={styles.categoryTitle}>üîß –ü–æ—á–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h3>
          <div className={styles.settingsList}>
            <div className={styles.settingItem}>
              <span className={styles.settingIcon}>üîê</span>
              <div className={styles.settingContent}>
                <strong>–ë–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</strong>
                <p>–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ –±–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ 1 –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞, –ø–æ—Ç—ñ–º –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ —ñ–Ω—à—ñ, —Ä–µ–∑–µ—Ä–≤–Ω—ñ</p>
              </div>
            </div>
              <div className={styles.settingItem}>
               <span className={styles.settingIcon}>üåâ</span>
               <div className={styles.settingContent}>
                 <strong>Bridge –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</strong>
                 <p>–ë–∞–∂–∞–Ω–æ –≤ Bridge –Ω–µ –¥–æ–¥–∞–≤–∞—Ç–∏ —Ç—ñ –ø–æ—Ä—Ç–∏ —â–æ –±—É–¥—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å –ø—ñ–¥ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤. –Ø–∫—â–æ –≤–æ–Ω–∏ –≤–∂–µ —î –≤ Bridge - –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –≤–∏–¥–∞–ª–∏—Ç–∏ —ó—Ö –∑–≤—ñ–¥—Ç–∏!</p>
               </div>
             </div>
            <div className={styles.settingItem}>
              <span className={styles.settingIcon}>üåê</span>
              <div className={styles.settingContent}>
                <strong>DHCP Client</strong>
                <p>–î–æ–¥–∞—î–º–æ ether2 —Ç–∞ —ñ–Ω—à—ñ –ø–æ—Ä—Ç–∏ –∑ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏. Default Route Distance - –≤–∏—Å—Ç–∞–≤–ª—è—î–º–æ –ø–æ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ù–æ–≤–∏–π —Ä–æ–∑–¥—ñ–ª –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º –≥—ñ–¥–æ–º */}
      <div className={styles.detailedGuide} ref={guideRef}>
        <h2 className={styles.guideTitle}>üìå –†–µ–∑–µ—Ä–≤–Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è 2+ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤</h2>
        
        <div className={styles.accordionContainer}>
          {/* –ï—Ç–∞–ø 1 */}
          <div className={`${styles.accordionItem} ${openAccordions.includes(0) ? styles.active : ''}`}>
            <div className={styles.accordionHeader} onClick={() => toggleAccordion(0)}>
              <h3 className={styles.accordionTitle}>–ï—Ç–∞–ø 1. DHCP Client –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤</h3>
              <span className={styles.accordionIcon}>‚ñº</span>
            </div>
            <div className={styles.accordionContent}>
              <ol className={styles.stepList}>
                <li>–£ WinBox –ø–µ—Ä–µ–π–¥–∏ –≤ <strong>IP &rarr; DHCP Client</strong></li>
                <li>–ù–∞—Ç–∏—Å–Ω–∏ <strong>New</strong> –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞</li>
                <li>–£ –ø–æ–ª—ñ <strong>Interface</strong> –≤–∏–±–µ—Ä–∏ <strong>ether2</strong> (–∞–±–æ —ñ–Ω—à–∏–π –ø–æ—Ä—Ç –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞)</li>
                <li>–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ <strong>Enabled</strong> –≤—ñ–¥–º—ñ—á–µ–Ω–æ</li>
                <li>–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ <strong>Use Peer DNS</strong> –≤—ñ–¥–º—ñ—á–µ–Ω–æ</li>
                <li>–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ <strong>Use Peer NTP</strong> –≤—ñ–¥–º—ñ—á–µ–Ω–æ</li>
                <li>–£ –ø–æ–ª—ñ <strong>Add Default Route</strong> –≤—Å—Ç–∞–Ω–æ–≤–∏ <strong>yes</strong></li>
                <li>–£ –ø–æ–ª—ñ <strong>Default Route Distance</strong> –≤—Å—Ç–∞–Ω–æ–≤–∏ <strong>2</strong> (–¥–ª—è 2-–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞)</li>
                <li>–£ –ø–æ–ª—ñ <strong>Check Gateway</strong> –≤—Å—Ç–∞–Ω–æ–≤–∏ <strong>ping</strong> (‚ö†Ô∏è <strong>–í–∞–∂–ª–∏–≤–æ:</strong> —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –í–°–Ü–• –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤ - —ñ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ, —ñ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö!)</li>
                <li>–ù–∞—Ç–∏—Å–Ω–∏ <strong>OK</strong></li>
                <li>–ü–æ–≤—Ç–æ—Ä–∏ –¥–ª—è —ñ–Ω—à–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –ø–æ—Ä—Ç–∞–º–∏ —Ç–∞ distance</li>
               </ol>
                <div className={styles.screenshotNote}>
                  <img 
                    src={dhcp1Img} 
                    alt="DHCP Client –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 1" 
                    className={styles.screenshot} 
                    onClick={(e) => onImageClick(dhcp1Img, "DHCP Client –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 1")}
                  />
                  <img 
                    src={dhcp2Img} 
                    alt="DHCP Client –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 2" 
                    className={styles.screenshot} 
                    onClick={(e) => onImageClick(dhcp2Img, "DHCP Client –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 2")}
                  />
                  <img 
                    src={dhcp3Img} 
                    alt="DHCP Client –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 3" 
                    className={styles.screenshot} 
                    onClick={(e) => onImageClick(dhcp3Img, "DHCP Client –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 3")}
                  />
                </div>
            </div>
          </div>

          {/* –ï—Ç–∞–ø 2 */}
          <div className={`${styles.accordionItem} ${openAccordions.includes(1) ? styles.active : ''}`}>
            <div className={styles.accordionHeader} onClick={() => toggleAccordion(1)}>
              <h3 className={styles.accordionTitle}>–ï—Ç–∞–ø 2. Address List –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤</h3>
              <span className={styles.accordionIcon}>‚ñº</span>
            </div>
            <div className={styles.accordionContent}>
              <ol className={styles.stepList}>
                <li>–£ WinBox –ø–µ—Ä–µ–π–¥–∏ –≤ <strong>IP &rarr; Addresses</strong></li>
                <li>–ù–∞—Ç–∏—Å–Ω–∏ <strong>New</strong> –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –∞–¥—Ä–µ—Å–∏</li>
                <li>–£ –ø–æ–ª—ñ <strong>Address</strong> –≤–≤–µ–¥–∏ IP –∞–¥—Ä–µ—Å—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞</li>
                <li>–£ –ø–æ–ª—ñ <strong>Interface</strong> –≤–∏–±–µ—Ä–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –ø–æ—Ä—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, <strong>ether2</strong>)</li>
                <li>–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ <strong>Enabled</strong> –≤—ñ–¥–º—ñ—á–µ–Ω–æ</li>
                <li>–ù–∞—Ç–∏—Å–Ω–∏ <strong>OK</strong></li>
                <li>–ü–æ–≤—Ç–æ—Ä–∏ –¥–ª—è –≤—Å—ñ—Ö —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤</li>
              </ol>
                <div className={styles.screenshotNote}>
                  <img 
                    src={addressImg} 
                    alt="Address List –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" 
                    className={styles.screenshot} 
                    onClick={(e) => onImageClick(addressImg, "Address List –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")}
                  />
               </div>
            </div>
          </div>

          {/* –ï—Ç–∞–ø 3 */}
          <div className={`${styles.accordionItem} ${openAccordions.includes(2) ? styles.active : ''}`}>
            <div className={styles.accordionHeader} onClick={() => toggleAccordion(2)}>
              <h3 className={styles.accordionTitle}>–ï—Ç–∞–ø 3. Firewall - NAT –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤</h3>
              <span className={styles.accordionIcon}>‚ñº</span>
            </div>
            <div className={styles.accordionContent}>
              <ol className={styles.stepList}>
                <li>–£ WinBox –ø–µ—Ä–µ–π–¥–∏ –≤ <strong>IP &rarr; Firewall &rarr; NAT</strong></li>
                <li>–ù–∞—Ç–∏—Å–Ω–∏ <strong>New</strong> –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞</li>
                <li>–£ –ø–æ–ª—ñ <strong>Chain</strong> –≤–∏–±–µ—Ä–∏ <strong>srcnat</strong></li>
                <li>–£ –ø–æ–ª—ñ <strong>Out Interface</strong> –≤–∏–±–µ—Ä–∏ –ø–æ—Ä—Ç –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, <strong>ether2</strong>)</li>
                <li>–£ –ø–æ–ª—ñ <strong>Action</strong> –≤–∏–±–µ—Ä–∏ <strong>masquerade</strong></li>
                <li>–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ <strong>Enabled</strong> –≤—ñ–¥–º—ñ—á–µ–Ω–æ</li>
                <li>–ù–∞—Ç–∏—Å–Ω–∏ <strong>OK</strong></li>
                                 <li>–ü–æ–≤—Ç–æ—Ä–∏ –¥–ª—è –≤—Å—ñ—Ö —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤</li>
               </ol>
                <div className={styles.screenshotNote}>
                  <img 
                     src={natImg} 
                     alt="Firewall NAT –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" 
                     className={styles.screenshot} 
                     onClick={(e) => onImageClick(natImg, "Firewall NAT –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")}
                   />
                </div>
            </div>
          </div>

          {/* –ï—Ç–∞–ø 4 */}
          <div className={`${styles.accordionItem} ${openAccordions.includes(3) ? styles.active : ''}`}>
            <div className={styles.accordionHeader} onClick={() => toggleAccordion(3)}>
              <h3 className={styles.accordionTitle}>–ï—Ç–∞–ø 4. Route List - –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h3>
              <span className={styles.accordionIcon}>‚ñº</span>
            </div>
            <div className={styles.accordionContent}>
              <ol className={styles.stepList}>
                <li>–£ WinBox –ø–µ—Ä–µ–π–¥–∏ –≤ <strong>IP &rarr; Routes</strong></li>
                <li>–ü–µ—Ä–µ–≤—ñ—Ä –ø–æ—Ä—è–¥–æ–∫ –º–∞—Ä—à—Ä—É—Ç—ñ–≤ –∑–∞ <strong>Distance</strong></li>
                <li>–û—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ <strong>Distance = 1</strong></li>
                <li>–†–µ–∑–µ—Ä–≤–Ω—ñ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∏ –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ <strong>Distance = 2, 3, 4...</strong></li>
                <li>–Ø–∫—â–æ –º–∞—Ä—à—Ä—É—Ç –Ω–µ –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ - –¥–æ–¥–∞–π –Ω–æ–≤–∏–π</li>
                <li>–£ –ø–æ–ª—ñ <strong>Dst Address</strong> –≤–≤–µ–¥–∏ <strong>0.0.0.0/0</strong></li>
                <li>–£ –ø–æ–ª—ñ <strong>Gateway</strong> –≤–≤–µ–¥–∏ IP –∞–¥—Ä–µ—Å—É —à–ª—é–∑—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞</li>
                <li>–£ –ø–æ–ª—ñ <strong>Distance</strong> –≤—Å—Ç–∞–Ω–æ–≤–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç</li>
                <li>–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ <strong>Enabled</strong> –≤—ñ–¥–º—ñ—á–µ–Ω–æ</li>
                <li>–ù–∞—Ç–∏—Å–Ω–∏ <strong>OK</strong></li>
              </ol>
              <div className={styles.screenshotNote}>
                <img 
                    src={route1Img} 
                    alt="Route List –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 1" 
                    className={styles.screenshot} 
                    onClick={(e) => onImageClick(route1Img, "Route List –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 1")}
                  />
                  <img 
                    src={route2Img} 
                    alt="Route List –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 2" 
                    className={styles.screenshot} 
                    onClick={(e) => onImageClick(route2Img, "Route List –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 2")}
                  />
                  <img 
                    src={route3Img} 
                    alt="Route List –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 3" 
                    className={styles.screenshot} 
                    onClick={(e) => onImageClick(route3Img, "Route List –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 3")}
                  />
              </div>
            </div>
          </div>
        </div>
       </div>
     </div>
   )
 }

export default Backup
