import { useState } from 'react'
import './App.css'

// –Ü–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –∑ –Ω–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø–∞–ø–æ–∫
import MikroTikGeneral from './components/MikroTikGeneral/MikroTikGeneral'
import BasicSettings from './components/BasicSettings/BasicSettings'
import AdditionalSettings1 from './components/AdditionalSettings1/AdditionalSettings1'
import Backup from './components/Backup/Backup'
import SecuritySettings from './components/SecuritySettings/SecuritySettings'

function App() {
  const [currentPage, setCurrentPage] = useState('general')
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)
  const [globalModalImage, setGlobalModalImage] = useState(null)
  
  const handlePageChange = (page) => {
    setCurrentPage(page)
    setIsMobileMenuOpen(false) // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–±—ñ–ª—å–Ω–µ –º–µ–Ω—é –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    window.scrollTo({ top: 0, behavior: 'smooth' }) // –ü–ª–∞–≤–Ω–∏–π —Å–∫—Ä–æ–ª –¥–æ –≤–µ—Ä—Ö—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  }

  const openGlobalImageModal = (imageSrc, imageAlt) => {
    document.body.style.overflow = 'hidden'
    setGlobalModalImage({ src: imageSrc, alt: imageAlt })
  }

  const closeGlobalImageModal = () => {
    document.body.style.overflow = 'auto'
    setGlobalModalImage(null)
  }

  const renderPage = () => {
    switch (currentPage) {
      case 'general':
        return <MikroTikGeneral />
             case 'basic':
               return <BasicSettings onImageClick={openGlobalImageModal} />
      case 'additional1':
        return <AdditionalSettings1 />
      case 'backup':
        return <Backup onImageClick={openGlobalImageModal} />
      case 'security':
        return <SecuritySettings />
      default:
        return <MikroTikGeneral />
    }
  }

  return (
    <div className="app">
      <nav className="navigation">
        <div className="nav-brand">
          <h2>üñ•Ô∏è MikroTik –î–æ–≤—ñ–¥–Ω–∏–∫</h2>
        </div>
        
        {/* –ë—É—Ä–≥–µ—Ä –∫–Ω–æ–ø–∫–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ */}
        <button 
          className="burger-menu"
          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
          aria-label="Toggle mobile menu"
        >
          <span className={`burger-line ${isMobileMenuOpen ? 'active' : ''}`}></span>
          <span className={`burger-line ${isMobileMenuOpen ? 'active' : ''}`}></span>
          <span className={`burger-line ${isMobileMenuOpen ? 'active' : ''}`}></span>
        </button>
        
        <div className="nav-links">
          <button 
            className={`nav-link ${currentPage === 'general' ? 'active' : ''}`}
            onClick={() => handlePageChange('general')}
          >
            üìã –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ–ª–æ–∂–µ–Ω–Ω—è
          </button>
          <button 
            className={`nav-link ${currentPage === 'basic' ? 'active' : ''}`}
            onClick={() => handlePageChange('basic')}
          >
            ‚öôÔ∏è –ë–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </button>
          
          <button 
            className={`nav-link ${currentPage === 'backup' ? 'active' : ''}`}
            onClick={() => handlePageChange('backup')}
          >
            üîå –†–µ–∑–µ—Ä–≤–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
          </button>
          
          <button 
            className={`nav-link ${currentPage === 'security' ? 'active' : ''}`}
            onClick={() => handlePageChange('security')}
          >
            üîê –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞—Ö–∏—Å—Ç—É
          </button>
          
          
          <button 
            className={`nav-link ${currentPage === 'additional1' ? 'active' : ''}`}
            onClick={() => handlePageChange('additional1')}
          >
            üîí –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </button>
        </div>
      </nav>
      
      {/* –ú–æ–±—ñ–ª—å–Ω–µ –º–µ–Ω—é */}
      <div 
        className={`mobile-menu ${isMobileMenuOpen ? 'open' : ''}`}
        onClick={() => setIsMobileMenuOpen(false)}
      >
        <div 
          className="mobile-menu-content"
          onClick={(e) => e.stopPropagation()}
        >
          <button 
            className={`mobile-nav-link ${currentPage === 'general' ? 'active' : ''}`}
            onClick={() => handlePageChange('general')}
          >
            üìã –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ–ª–æ–∂–µ–Ω–Ω—è
          </button>
          <button 
            className={`mobile-nav-link ${currentPage === 'basic' ? 'active' : ''}`}
            onClick={() => handlePageChange('basic')}
          >
            ‚öôÔ∏è –ë–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </button>
          <button 
            className={`mobile-nav-link ${currentPage === 'backup' ? 'active' : ''}`}
            onClick={() => handlePageChange('backup')}
          >
            üîå –†–µ–∑–µ—Ä–≤–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
          </button>
          <button 
            className={`mobile-nav-link ${currentPage === 'security' ? 'active' : ''}`}
            onClick={() => handlePageChange('security')}
          >
            üîê –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞—Ö–∏—Å—Ç—É
          </button>
          <button 
            className={`mobile-nav-link ${currentPage === 'additional1' ? 'active' : ''}`}
            onClick={() => handlePageChange('additional1')}
          >
            üîí –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </button>
        </div>
      </div>
      
      <main className="main-content">
        {renderPage()}
      </main>

      {/* –ì–ª–æ–±–∞–ª—å–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω—å */}
      {globalModalImage && (
        <div className="global-image-modal" onClick={closeGlobalImageModal}>
          <div 
            className="global-modal-content" 
            onClick={(e) => e.stopPropagation()}
          >
            <button className="global-close-button" onClick={closeGlobalImageModal}>√ó</button>
            <img 
              src={globalModalImage.src} 
              alt={globalModalImage.alt} 
              className="global-modal-image" 
            />
            <p className="global-modal-caption">{globalModalImage.alt}</p>
          </div>
        </div>
      )}
    </div>
  )
}

export default App
