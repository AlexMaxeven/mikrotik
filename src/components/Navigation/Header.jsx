import { useState } from 'react'
import styles from './Header.module.css'

const Header = ({ currentPage, onPageChange }) => {
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)

  const handlePageChange = (page) => {
    onPageChange(page)
    setIsMobileMenuOpen(false)
    document.body.style.overflow = 'auto'
    window.scrollTo({ top: 0, behavior: 'smooth' })
  }

  const toggleMobileMenu = () => {
    const newState = !isMobileMenuOpen
    setIsMobileMenuOpen(newState)
    
    // –ë–ª–æ–∫—É—î–º–æ —Å–∫—Ä–æ–ª —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–æ–ª–∏ –º–µ–Ω—é –≤—ñ–¥–∫—Ä–∏—Ç–µ
    if (newState) {
      document.body.style.overflow = 'hidden'
    } else {
      document.body.style.overflow = 'auto'
    }
  }

  const closeMobileMenu = (e) => {
    if (e.target === e.currentTarget) {
      setIsMobileMenuOpen(false)
      document.body.style.overflow = 'auto'
    }
  }

  return (
    <>
      {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è */}
      <nav className={styles.navigation}>
        <div className={styles.navBrand}>
          <h2>üñ•Ô∏è MikroTik –î–æ–≤—ñ–¥–Ω–∏–∫</h2>
        </div>
        <div className={styles.navLinks}>
          <button
            className={`${styles.navLink} ${currentPage === 'general' ? styles.active : ''}`}
            onClick={() => handlePageChange('general')}
          >
            üìã –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ–ª–æ–∂–µ–Ω–Ω—è
          </button>
          <button
            className={`${styles.navLink} ${currentPage === 'basic' ? styles.active : ''}`}
            onClick={() => handlePageChange('basic')}
          >
            ‚öôÔ∏è –ë–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </button>
          <button
            className={`${styles.navLink} ${currentPage === 'additional1' ? styles.active : ''}`}
            onClick={() => handlePageChange('additional1')}
          >
            üîß –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </button>
          <button
            className={`${styles.navLink} ${currentPage === 'backup' ? styles.active : ''}`}
            onClick={() => handlePageChange('backup')}
          >
            üîÑ –†–µ–∑–µ—Ä–≤–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
          </button>
          <button
            className={`${styles.navLink} ${currentPage === 'security' ? styles.active : ''}`}
            onClick={() => handlePageChange('security')}
          >
            üõ°Ô∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞—Ö–∏—Å—Ç—É
          </button>
          <button
            className={`${styles.navLink} ${currentPage === 'scripts' ? styles.active : ''}`}
            onClick={() => handlePageChange('scripts')}
          >
            üìú –°–∫—Ä–∏–ø—Ç–∏
          </button>
        </div>
      </nav>

      {/* –ë—É—Ä–≥–µ—Ä –º–µ–Ω—é */}
      <button
        className={styles.burgerMenu}
        onClick={toggleMobileMenu}
        aria-label="Toggle mobile menu"
      >
        <div className={`${styles.burgerLine} ${isMobileMenuOpen ? styles.open : ''}`}></div>
        <div className={`${styles.burgerLine} ${isMobileMenuOpen ? styles.open : ''}`}></div>
        <div className={`${styles.burgerLine} ${isMobileMenuOpen ? styles.open : ''}`}></div>
      </button>

      {/* –ú–æ–±—ñ–ª—å–Ω–µ –º–µ–Ω—é */}
      <div className={`${styles.mobileMenuOverlay} ${isMobileMenuOpen ? styles.open : ''}`} onClick={closeMobileMenu}>
          <div className={styles.mobileMenu}>
            <button 
              className={styles.mobileMenuCloseButton}
              onClick={() => {
                setIsMobileMenuOpen(false)
                document.body.style.overflow = 'auto'
              }}
              aria-label="Close mobile menu"
            >
              √ó
            </button>
            <div className={styles.mobileMenuContent}>
              <button
                className={`${styles.mobileNavLink} ${currentPage === 'general' ? styles.active : ''}`}
                onClick={() => handlePageChange('general')}
              >
                üìã –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ–ª–æ–∂–µ–Ω–Ω—è
              </button>
              <button
                className={`${styles.mobileNavLink} ${currentPage === 'basic' ? styles.active : ''}`}
                onClick={() => handlePageChange('basic')}
              >
                ‚öôÔ∏è –ë–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
              </button>
              <button
                className={`${styles.mobileNavLink} ${currentPage === 'additional1' ? styles.active : ''}`}
                onClick={() => handlePageChange('additional1')}
              >
                üîß –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
              </button>
              <button
                className={`${styles.mobileNavLink} ${currentPage === 'backup' ? styles.active : ''}`}
                onClick={() => handlePageChange('backup')}
              >
                üîÑ –†–µ–∑–µ—Ä–≤–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
              </button>
              <button
                className={`${styles.mobileNavLink} ${currentPage === 'security' ? styles.active : ''}`}
                onClick={() => handlePageChange('security')}
              >
                üõ°Ô∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞—Ö–∏—Å—Ç—É
              </button>
              <button
                className={`${styles.mobileNavLink} ${currentPage === 'scripts' ? styles.active : ''}`}
                onClick={() => handlePageChange('scripts')}
              >
                üìú –°–∫—Ä–∏–ø—Ç–∏
              </button>
            </div>
          </div>
        </div>
    </>
  )
}

export default Header
