import { useState, useRef, useEffect } from 'react'
import styles from './SecuritySettings.module.css'

// –Ü–º–ø–æ—Ä—Ç –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑–∞—Ö–∏—Å—Ç—É (–∑–∞–≥–ª—É—à–∫–∏ - –ø–æ—Ç—ñ–º –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ñ)
// import firewall1Img from '../../assets/Security/firewall1.jpg'
// import firewall2Img from '../../assets/Security/firewall2.jpg'
// import firewall3Img from '../../assets/Security/firewall3.jpg'
// import firewall4Img from '../../assets/Security/firewall4.jpg'
// import firewall5Img from '../../assets/Security/firewall5.jpg'
// import firewall6Img from '../../assets/Security/firewall6.jpg'
// import firewall7Img from '../../assets/Security/firewall7.jpg'
// import dnsImg from '../../assets/Security/dns.jpg'
import securityImg from '../../assets/Security/Security.jpg'

function SecuritySettings() {
  const [openAccordion, setOpenAccordion] = useState(null)
  const [isSticky, setIsSticky] = useState(false)
  const [selectedImage, setSelectedImage] = useState(null)
  const guideRef = useRef(null)
  const buttonRef = useRef(null)

  const toggleAccordion = (index) => {
    setOpenAccordion(openAccordion === index ? null : index)
  }

  const scrollToGuide = () => {
    guideRef.current?.scrollIntoView({ 
      behavior: 'smooth',
      block: 'start'
    })
  }

  const openImageModal = (imageSrc, imageAlt, event) => {
    console.log('openImageModal called:', imageSrc, imageAlt)
    
    // –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –ø–æ —Ü–µ–Ω—Ç—Ä—É –µ–∫—Ä–∞–Ω—É
    setSelectedImage({ 
      src: imageSrc, 
      alt: imageAlt
    })
  }

  const closeImageModal = () => {
    console.log('closeImageModal called')
    setSelectedImage(null)
  }

  useEffect(() => {
    const handleScroll = () => {
      if (guideRef.current && buttonRef.current) {
        const guideTop = guideRef.current.offsetTop
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop
        const buttonBottom = buttonRef.current.offsetTop + buttonRef.current.offsetHeight
        
        // –Ø–∫—â–æ –∫–Ω–æ–ø–∫–∞ –¥–æ—Å—è–≥–∞—î –ø–æ—á–∞—Ç–∫—É –≥—ñ–¥—É - –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ó—ó
        if (buttonBottom >= guideTop) {
          setIsSticky(false)
          // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
          if (buttonRef.current) {
            buttonRef.current.style.opacity = '0'
            buttonRef.current.style.transform = 'translateY(-20px)'
            buttonRef.current.style.pointerEvents = 'none'
          }
        } else {
          setIsSticky(true)
          // –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –∑–Ω–æ–≤—É
          if (buttonRef.current) {
            buttonRef.current.style.opacity = '1'
            buttonRef.current.style.transform = 'translateY(0)'
            buttonRef.current.style.pointerEvents = 'auto'
          }
        }
      }
    }

    window.addEventListener('scroll', handleScroll)
    handleScroll() // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–¥—Ä–∞–∑—É –¥–ª—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É

    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  // –î–æ–¥–∞—î–º–æ useEffect –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω selectedImage
  useEffect(() => {
    console.log('selectedImage changed:', selectedImage)
    if (selectedImage && selectedImage.position) {
      console.log('Modal position:', selectedImage.position)
    }
  }, [selectedImage])

  return (
    <div className={styles.page}>
      <h1 className={styles.title}>üîê –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞—Ö–∏—Å—Ç—É MikroTik</h1>
      <p className={styles.description}>
        –ë–∞–∑–æ–≤—ñ –ø—Ä–∞–≤–∏–ª–∞ –∑–∞—Ö–∏—Å—Ç—É MikroTik (Firewall) –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ —Ä–æ—É—Ç–µ—Ä–∞:
      </p>
      
      {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–æ –≥—ñ–¥—É */}
      <div 
        ref={buttonRef}
        className={`${styles.scrollButtonContainer} ${isSticky ? styles.sticky : ''}`}
      >
        <button className={styles.scrollButton} onClick={scrollToGuide}>
          üìå –î–µ—Ç–∞–ª—å–Ω–∏–π –≥—ñ–¥ –ø–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—é –∑–∞—Ö–∏—Å—Ç—É
        </button>
      </div>
      
      <div className={styles.settingsGrid}>
        <div className={styles.settingsCategory}>
          <h3 className={styles.categoryTitle}>üõ°Ô∏è –û—Å–Ω–æ–≤–Ω—ñ –ø—Ä–∏–Ω—Ü–∏–ø–∏ –∑–∞—Ö–∏—Å—Ç—É</h3>
          <div className={styles.settingsList}>
            <div className={styles.settingItem}>
              <span className={styles.settingIcon}>üîí</span>
              <div className={styles.settingContent}>
                <strong>INPUT Chain</strong>
                <p>–ö–µ—Ä—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–æ–º –¥–æ —Å–∞–º–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞ - –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–∞ —á–∞—Å—Ç–∏–Ω–∞ –∑–∞—Ö–∏—Å—Ç—É</p>
              </div>
            </div>
            <div className={styles.settingItem}>
              <span className={styles.settingIcon}>üåê</span>
              <div className={styles.settingContent}>
                <strong>OUTPUT Chain</strong>
                <p>–î–æ–∑–≤–æ–ª—è—î —Ä–æ—É—Ç–µ—Ä—É —Å–∞–º–æ–º—É –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ DNS —Ç–∞ —ñ–Ω—à–∏–º–∏ —Å–ª—É–∂–±–∞–º–∏</p>
              </div>
            </div>
            <div className={styles.settingItem}>
              <span className={styles.settingIcon}>üö´</span>
              <div className={styles.settingContent}>
                <strong>–ü—Ä–∏–Ω—Ü–∏–ø "–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∑–∞–∫—Ä–∏—Ç–æ"</strong>
                <p>–í—Å–µ —â–æ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ —è–≤–Ω–æ - –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ù–æ–≤–∏–π —Ä–æ–∑–¥—ñ–ª –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º –≥—ñ–¥–æ–º */}
      <div className={styles.detailedGuide} ref={guideRef}>
        <h2 className={styles.guideTitle}>üìå –î–µ—Ç–∞–ª—å–Ω–∏–π –≥—ñ–¥ –ø–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—é –∑–∞—Ö–∏—Å—Ç—É</h2>
        
        <div className={styles.accordionContainer}>
          {/* INPUT Chain - –û—Å–Ω–æ–≤–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ */}
          <div className={`${styles.accordionItem} ${openAccordion === 0 ? styles.active : ''}`}>
            <div className={styles.accordionHeader} onClick={() => toggleAccordion(0)}>
              <h3 className={styles.accordionTitle}>1. INPUT Chain - –ö–µ—Ä—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–æ–º –¥–æ —Ä–æ—É—Ç–µ—Ä–∞</h3>
              <span className={styles.accordionIcon}>‚ñº</span>
            </div>
            <div className={styles.accordionContent}>
              <div className={styles.ruleSection}>
                <h4>1.1. –î–æ–∑–≤–æ–ª–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è</h4>
                <ul className={styles.ruleList}>
                  <li><strong>Chain:</strong> input</li>
                  <li><strong>Connection State:</strong> established, related</li>
                  <li><strong>Action:</strong> accept</li>
                </ul>
                                 <p className={styles.ruleDescription}>
                   üëâ –¶–∏–º –ø—Ä–∞–≤–∏–ª–æ–º –¥–æ–∑–≤–æ–ª—è—î–º–æ –≤–µ—Å—å –ª–µ–≥–∞–ª—å–Ω–∏–π —Ç—Ä–∞—Ñ—ñ–∫, —è–∫–∏–π –≤–∂–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π.
                 </p>
              </div>

              <div className={styles.ruleSection}>
                <h4>1.2. –ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –ø–∞–∫–µ—Ç–∏</h4>
                <ul className={styles.ruleList}>
                  <li><strong>Chain:</strong> input</li>
                  <li><strong>Connection State:</strong> invalid</li>
                  <li><strong>Action:</strong> drop</li>
                </ul>
                                 <p className={styles.ruleDescription}>
                   üëâ –í—ñ–¥—Å—ñ–∫–∞—î ¬´–±–∏—Ç—ñ¬ª –∞–±–æ –ø—ñ–¥–æ–∑—Ä—ñ–ª—ñ –ø–∞–∫–µ—Ç–∏.
                 </p>
              </div>

              <div className={styles.ruleSection}>
                <h4>1.3. –î–æ—Å—Ç—É–ø –∑ –ª–æ–∫–∞–ª—å–Ω–æ—ó –º–µ—Ä–µ–∂—ñ (LAN)</h4>
                <ul className={styles.ruleList}>
                  <li><strong>Chain:</strong> input</li>
                  <li><strong>Src. Address:</strong> 192.168.88.0/24</li>
                  <li><strong>Action:</strong> accept</li>
                </ul>
                                 <p className={styles.ruleDescription}>
                   üëâ –î–æ–∑–≤–æ–ª—è—î –≤—Å—ñ–º –ø—Ä–∏—Å—Ç—Ä–æ—è–º –∑ LAN –ø—ñ–¥–∫–ª—é—á–∞—Ç–∏—Å—å –¥–æ —Ä–æ—É—Ç–µ—Ä–∞ (WinBox, SSH —Ç–æ—â–æ).
                 </p>
              </div>

              <div className={styles.ruleSection}>
                <h4>1.4. –ê–¥–º—ñ–Ω –¥–æ—Å—Ç—É–ø (—Ç—ñ–ª—å–∫–∏ –∑ LAN)</h4>
                <ul className={styles.ruleList}>
                  <li><strong>Chain:</strong> input</li>
                  <li><strong>Protocol:</strong> tcp</li>
                  <li><strong>Dst. Port:</strong> 8291 (WinBox) ‚Üí accept</li>
                  <li><strong>Dst. Port:</strong> 22 (SSH) ‚Üí accept</li>
                  <li><strong>Dst. Port:</strong> 443 (WebFig HTTPS) ‚Üí accept</li>
                </ul>
                                 <p className={styles.ruleDescription}>
                   üëâ –î–æ–∑–≤–æ–ª—è—î –¥–æ—Å—Ç—É–ø –ª–∏—à–µ –¥–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è, –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø–æ—Ä—Ç–∏ ‚Äî —Ä–µ—à—Ç–∞ –∑–∞–∫—Ä–∏–≤–∞—î—Ç—å—Å—è.
                 </p>
              </div>

              <div className={styles.ruleSection}>
                <h4>1.5. ICMP (Ping) - –¥–æ–∑–≤–æ–ª–∏—Ç–∏ –∑ LAN, –∑–∞–±–æ—Ä–æ–Ω–∏—Ç–∏ –∑ WAN</h4>
                <ul className={styles.ruleList}>
                  <li><strong>–î–æ–∑–≤–æ–ª–∏—Ç–∏ –∑ LAN:</strong></li>
                  <li>Chain: input, Protocol: icmp, Action: accept</li>
                  <li><strong>–ó–∞–±–æ—Ä–æ–Ω–∏—Ç–∏ –∑ WAN:</strong></li>
                  <li>Chain: input, Protocol: icmp, In. Interface: ether1, ether2, Action: drop</li>
                </ul>
                                 <p className={styles.ruleDescription}>
                   üëâ –î–æ–∑–≤–æ–ª—è—î –ø—ñ–Ω–≥ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑ LAN, –∑–∞–±–æ—Ä–æ–Ω—è—î –ø—ñ–Ω–≥ –∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É (—â–æ–± ¬´–Ω–µ —Å–≤—ñ—Ç–∏–≤—Å—è¬ª).
                 </p>
              </div>

              <div className={styles.ruleSection}>
                <h4>1.6. –ó–∞–±–æ—Ä–æ–Ω–∏—Ç–∏ –≤–µ—Å—å —ñ–Ω—à–∏–π —Ç—Ä–∞—Ñ—ñ–∫ –∑ WAN</h4>
                <ul className={styles.ruleList}>
                  <li><strong>–î–ª—è ether1:</strong></li>
                  <li>Chain: input, In. Interface: ether1, Action: drop</li>
                  <li><strong>–î–ª—è ether2:</strong></li>
                  <li>Chain: input, In. Interface: ether2, Action: drop</li>
                </ul>
                                 <p className={styles.ruleDescription}>
                   üëâ –†—ñ–∂–µ –≤—Å–µ, —â–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É –Ω–∞–ø—Ä—è–º—É –¥–æ —Ä–æ—É—Ç–µ—Ä–∞.
                 </p>
              </div>

              <div className={styles.ruleSection}>
                <h4>1.7. –§—ñ–Ω–∞–ª—å–Ω–∏–π –±–∞—Ä'—î—Ä</h4>
                <ul className={styles.ruleList}>
                  <li><strong>Chain:</strong> input</li>
                  <li><strong>Action:</strong> drop</li>
                </ul>
                                 <p className={styles.ruleDescription}>
                   üëâ –Ø–∫—â–æ —â–æ—Å—å –Ω–µ –ø—ñ–¥–ø–∞–ª–æ –ø—ñ–¥ –ø—Ä–∞–≤–∏–ª–∞ –≤–∏—â–µ ‚Äî –±–ª–æ–∫—É—î—Ç—å—Å—è.
                 </p>
              </div>
            </div>
          </div>

          {/* OUTPUT Chain */}
          <div className={`${styles.accordionItem} ${openAccordion === 1 ? styles.active : ''}`}>
            <div className={styles.accordionHeader} onClick={() => toggleAccordion(1)}>
              <h3 className={styles.accordionTitle}>2. OUTPUT Chain - DNS –∑–∞–ø–∏—Ç–∏ —Ä–æ—É—Ç–µ—Ä–∞</h3>
              <span className={styles.accordionIcon}>‚ñº</span>
            </div>
            <div className={styles.accordionContent}>
              <div className={styles.ruleSection}>
                <h4>2.1. DNS-–∑–∞–ø–∏—Ç–∏</h4>
                <ul className={styles.ruleList}>
                  <li><strong>UDP DNS:</strong></li>
                  <li>Chain: output, Protocol: udp, Dst. Port: 53 ‚Üí accept</li>
                  <li><strong>TCP DNS:</strong></li>
                  <li>Chain: output, Protocol: tcp, Dst. Port: 53 ‚Üí accept</li>
                </ul>
                                 <p className={styles.ruleDescription}>
                   üëâ –î–æ–∑–≤–æ–ª—è—î —Ä–æ—É—Ç–µ—Ä—É –∑–∞–ø–∏—Ç—É–≤–∞—Ç–∏ DNS-—Å–µ—Ä–≤–µ—Ä–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, Google 8.8.8.8).
                 </p>
              </div>
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
          <div className={`${styles.accordionItem} ${openAccordion === 2 ? styles.active : ''}`}>
            <div className={styles.accordionHeader} onClick={() => toggleAccordion(2)}>
              <h3 className={styles.accordionTitle}>‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å</h3>
              <span className={styles.accordionIcon}>‚ñº</span>
            </div>
            <div className={styles.accordionContent}>
                             <div className={styles.resultSection}>
                 <h4>–©–æ –æ—Ç—Ä–∏–º—É—î–º–æ –ø—ñ—Å–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:</h4>
                 <ul className={styles.resultList}>
                   <li>‚úÖ <strong>LAN-–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</strong> –º–∞—é—Ç—å –ø–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ —Ä–æ—É—Ç–µ—Ä–∞</li>
                   <li>‚úÖ <strong>–í–µ—Å—å —Ç—Ä–∞—Ñ—ñ–∫ –∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É</strong> –≤—ñ–¥—Å—ñ–∫–∞—î—Ç—å—Å—è, –∫—Ä—ñ–º –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö —Å–ª—É–∂–±</li>
                   <li>‚úÖ <strong>–ü—ñ–Ω–≥ —ñ–∑ WAN</strong> –±–ª–æ–∫—É—î—Ç—å—Å—è</li>
                   <li>‚úÖ <strong>–†–æ—É—Ç–µ—Ä —Å–∞–º –º–æ–∂–µ</strong> —Ö–æ–¥–∏—Ç–∏ –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç (DNS, –∞–ø–¥–µ–π—Ç–∏)</li>
                   <li>‚úÖ <strong>–ê–¥–º—ñ–Ω –¥–æ—Å—Ç—É–ø</strong> –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –∑ –ª–æ–∫–∞–ª—å–Ω–æ—ó –º–µ—Ä–µ–∂—ñ</li>
                   <li>‚úÖ <strong>–ë–µ–∑–ø–µ–∫–∞</strong> –∑–∞–±–µ–∑–ø–µ—á—É—î—Ç—å—Å—è –ø—Ä–∏–Ω—Ü–∏–ø–æ–º "–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∑–∞–∫—Ä–∏—Ç–æ"</li>
                 </ul>
                 
                                   <div className={styles.screenshotNote}>
                    <img 
                      src={securityImg} 
                      alt="–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑–∞—Ö–∏—Å—Ç—É" 
                      className={styles.screenshot} 
                      onClick={(e) => openImageModal(securityImg, "–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑–∞—Ö–∏—Å—Ç—É", e)}
                    />
                  </div>
               </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ù–æ–≤–∏–π –±–ª–æ–∫ - –ê–∫—Ç—É–∞–ª—å–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ */}
      <div className={styles.currentRules}>
        <h2 className={styles.rulesTitle}>üìã –ê–∫—Ç—É–∞–ª—å–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞</h2>
        <p className={styles.rulesDescription}>
          –ü–æ—Ç–æ—á–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ –∑–∞—Ö–∏—Å—Ç—É, —è–∫—ñ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—å—Å—è –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
        </p>
        
        <div className={styles.rulesContainer}>
          {/* –ü—Ä–∞–≤–∏–ª–æ 1 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>‚úÖ</span>
              <h3 className={styles.ruleCardTitle}>Accept established,related,untracked</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> input</p>
              <p><strong>Action:</strong> accept</p>
              <p><strong>Connection State:</strong> established,related,untracked</p>
              <p><strong>Comment:</strong> defconf: accept established,related,untracked</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 2 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>üö´</span>
              <h3 className={styles.ruleCardTitle}>Drop invalid</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> input</p>
              <p><strong>Action:</strong> drop</p>
              <p><strong>Connection State:</strong> invalid</p>
              <p><strong>Comment:</strong> defconf: drop invalid</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 3 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>üì°</span>
              <h3 className={styles.ruleCardTitle}>Accept ICMP</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> input</p>
              <p><strong>Action:</strong> accept</p>
              <p><strong>Protocol:</strong> icmp</p>
              <p><strong>Comment:</strong> defconf: accept ICMP</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 4 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>üõ°Ô∏è</span>
              <h3 className={styles.ruleCardTitle}>Drop all not coming from LAN</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> input</p>
              <p><strong>Action:</strong> drop</p>
              <p><strong>In Interface List:</strong> !LAN</p>
              <p><strong>Comment:</strong> defconf: drop all not coming from LAN</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 5 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>üîê</span>
              <h3 className={styles.ruleCardTitle}>Accept in ipsec policy</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> forward</p>
              <p><strong>Action:</strong> accept</p>
              <p><strong>IPSec Policy:</strong> in,ipsec</p>
              <p><strong>Comment:</strong> defconf: accept in ipsec policy</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 6 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>üîê</span>
              <h3 className={styles.ruleCardTitle}>Accept out ipsec policy</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> forward</p>
              <p><strong>Action:</strong> accept</p>
              <p><strong>IPSec Policy:</strong> out,ipsec</p>
              <p><strong>Comment:</strong> defconf: accept out ipsec policy</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 7 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>‚ö°</span>
              <h3 className={styles.ruleCardTitle}>Fasttrack</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> forward</p>
              <p><strong>Action:</strong> fasttrack-connection</p>
              <p><strong>Connection State:</strong> established,related</p>
              <p><strong>Comment:</strong> defconf: fasttrack</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 8 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>‚úÖ</span>
              <h3 className={styles.ruleCardTitle}>Accept established,related,untracked (forward)</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> forward</p>
              <p><strong>Action:</strong> accept</p>
              <p><strong>Connection State:</strong> established,related,untracked</p>
              <p><strong>Comment:</strong> defconf: accept established,related, untracked</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 9 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>üö´</span>
              <h3 className={styles.ruleCardTitle}>Drop invalid (forward)</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> forward</p>
              <p><strong>Action:</strong> drop</p>
              <p><strong>Connection State:</strong> invalid</p>
              <p><strong>Comment:</strong> defconf: drop invalid</p>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∏–ª–æ 10 */}
          <div className={styles.ruleCard}>
            <div className={styles.ruleHeader}>
              <span className={styles.ruleIcon}>üõ°Ô∏è</span>
              <h3 className={styles.ruleCardTitle}>Drop all from WAN not DSTNATed</h3>
            </div>
            <div className={styles.ruleContent}>
              <p><strong>Chain:</strong> forward</p>
              <p><strong>Action:</strong> drop</p>
              <p><strong>Connection NAT State:</strong> !dstnat</p>
              <p><strong>Connection State:</strong> new</p>
              <p><strong>In Interface List:</strong> WAN</p>
              <p><strong>Comment:</strong> defconf: drop all from WAN not DSTNATed</p>
            </div>
          </div>
        </div>

        {/* –ë–ª–æ–∫ –∑ –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è */}
        <div className={styles.commandsSection}>
          <h3 className={styles.commandsTitle}>üìã –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è</h3>
          <p className={styles.commandsDescription}>
            –°–∫–æ–ø—ñ—é–π—Ç–µ —Ü—ñ –∫–æ–º–∞–Ω–¥–∏ —Ç–∞ –≤—Å—Ç–∞–≤—Ç–µ —ó—Ö –≤ Terminal –∞–±–æ WinBox:
          </p>
          
          <div className={styles.commandsList}>
            <div className={styles.commandBlock}>
              <h4 className={styles.commandBlockTitle}>–û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞:</h4>
              <div className={styles.commandCode}>
                <code>/ip firewall filter remove [find]</code>
              </div>
            </div>

            <div className={styles.commandBlock}>
              <h4 className={styles.commandBlockTitle}>–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—ñ –ø—Ä–∞–≤–∏–ª–∞:</h4>
              <div className={styles.commandCode}>
                <code>/ip firewall filter</code>
                <code>add action=accept chain=input comment="defconf: accept established,related,untracked" connection-state=established,related,untracked</code>
                <code>add action=drop chain=input comment="defconf: drop invalid" connection-state=invalid</code>
                <code>add action=accept chain=input comment="defconf: accept ICMP" protocol=icmp</code>
                <code>add action=drop chain=input comment="defconf: drop all not coming from LAN" in-interface-list=!LAN</code>
                <code>add action=accept chain=forward comment="defconf: accept in ipsec policy" ipsec-policy=in,ipsec</code>
                <code>add action=accept chain=forward comment="defconf: accept out ipsec policy" ipsec-policy=out,ipsec</code>
                <code>add action=fasttrack-connection chain=forward comment="defconf: fasttrack" connection-state=established,related</code>
                <code>add action=accept chain=forward comment="defconf: accept established,related, untracked" connection-state=established,related,untracked</code>
                <code>add action=drop chain=forward comment="defconf: drop invalid" connection-state=invalid</code>
                <code>add action=drop chain=forward comment="defconf: drop all from WAN not DSTNATed" connection-nat-state=!dstnat connection-state=new in-interface-list=WAN</code>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω—å */}
      {selectedImage && (
        <div className={styles.imageModal} onClick={closeImageModal}>
          <div 
            className={styles.modalContent} 
            onClick={(e) => e.stopPropagation()}
          >
            <button className={styles.closeButton} onClick={closeImageModal}>√ó</button>
            <img 
              src={selectedImage.src} 
              alt={selectedImage.alt} 
              className={styles.modalImage} 
            />
            <p className={styles.modalCaption}>{selectedImage.alt}</p>
          </div>
        </div>
      )}
    </div>
  )
}

export default SecuritySettings
